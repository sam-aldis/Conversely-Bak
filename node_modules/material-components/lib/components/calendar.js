'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _helpersWaves = require('./helpers/waves');

var _helpersWaves2 = _interopRequireDefault(_helpersWaves);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function getMoment(date, locale) {
  var value = (0, _moment2['default'])(date);
  value.locale(locale);
  return value;
}

var Calendar = (function (_Component) {
  _inherits(Calendar, _Component);

  function Calendar() {
    _classCallCheck(this, Calendar);

    _get(Object.getPrototypeOf(Calendar.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Calendar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.onNavigate) {
        _helpersWaves2['default'].attach(_reactDom2['default'].findDOMNode(this.refs.previous));
        _helpersWaves2['default'].attach(_reactDom2['default'].findDOMNode(this.refs.next));
      }
    }
  }, {
    key: 'onChange',
    value: function onChange(day, validDay) {
      var _props = this.props;
      var month = _props.month;
      var onChange = _props.onChange;
      var year = _props.year;

      if (onChange && validDay) {
        onChange({ target: { value: new Date(year, month, day) } });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      var _context$componentStyle = this.context.componentStyle;
      var secondaryColor = _context$componentStyle.secondaryColor;
      var secondaryFontColor = _context$componentStyle.secondaryFontColor;
      var typographyColor = _context$componentStyle.typographyColor;
      var _props2 = this.props;
      var className = _props2.className;
      var locale = _props2.locale;
      var month = _props2.month;
      var onNavigate = _props2.onNavigate;
      var onChange = _props2.onChange;
      var value = _props2.value;
      var style = _props2.style;
      var titleFormat = _props2.titleFormat;
      var validDays = _props2.validDays;
      var year = _props2.year;

      var date = getMoment({ year: year, month: month, day: 1 }, locale);
      var localeData = _moment2['default'].localeData(locale);
      var previousMonth = date.clone().subtract(1, 'months');
      var nextMonth = date.clone().add(1, 'months');
      var firstDayOfWeek = localeData.firstDayOfWeek();

      var weekdays = [];

      var _loop = function (i) {
        weekdays.push(localeData.weekdaysShort({ day: function day() {
            return i;
          } })[0]);
      };

      for (var i = 0; i < 7; i++) {
        _loop(i);
      }
      if (firstDayOfWeek > 0) {
        weekdays = [].concat(_toConsumableArray(weekdays.slice(firstDayOfWeek)), _toConsumableArray(weekdays.slice(0, firstDayOfWeek)));
      }

      var colWidth = 14.28571428;
      var today = getMoment(new Date(), locale).startOf('day');

      var days = [];

      var _loop2 = function (day) {
        var date = new Date(year, month, day);
        var validDay = !Array.isArray(validDays) || validDays.includes(day);
        var selectedDay = value && getMoment(value, locale).startOf('day').isSame(date);
        days.push(_react2['default'].createElement(
          'div',
          {
            key: day,
            style: {
              display: 'inline-block',
              width: colWidth + '%',
              textAlign: 'center',
              color: selectedDay ? secondaryFontColor : !validDay ? '#3e3e3e' : today.isSame(date) ? secondaryColor : 'inherit',
              cursor: onChange && validDay ? 'pointer' : 'inherit'
            },
            onTouchTap: function () {
              return _this.onChange(day, validDay);
            } },
          _react2['default'].createElement(
            'div',
            {
              style: {
                width: '30px',
                margin: '0 auto',
                backgroundColor: selectedDay ? secondaryColor : 'inherit',
                borderRadius: '50%'
              } },
            day
          )
        ));
      };

      for (var day = 1; day <= date.daysInMonth(); day++) {
        _loop2(day);
      }

      var navigation = onNavigate ? [_react2['default'].createElement(
        'div',
        {
          key: 'previous',
          ref: 'previous',
          className: 'waves-circle',
          style: {
            float: 'left',
            cursor: 'pointer',
            height: '48px',
            width: '48px',
            marginLeft: '-5px'
          },
          onTouchTap: function () {
            return onNavigate({ target: { value: {
                  year: previousMonth.get('year'),
                  month: previousMonth.get('month')
                } } });
          } },
        _react2['default'].createElement(
          'svg',
          { fill: typographyColor, height: '24', viewBox: '0 0 24 24', width: '24', style: { margin: '12px 9px 6px 9px' } },
          _react2['default'].createElement('path', { d: 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z' }),
          _react2['default'].createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })
        )
      ), _react2['default'].createElement(
        'div',
        {
          key: 'next',
          ref: 'next',
          className: 'waves-circle',
          style: {
            float: 'right',
            cursor: 'pointer',
            height: '48px',
            width: '48px',
            marginRight: '-5px'
          },
          onTouchTap: function () {
            return onNavigate({ target: { value: {
                  year: nextMonth.get('year'),
                  month: nextMonth.get('month')
                } } });
          } },
        _react2['default'].createElement(
          'svg',
          { fill: typographyColor, height: '24', viewBox: '0 0 24 24', width: '24', style: { margin: '12px 9px 6px 9px' } },
          _react2['default'].createElement('path', { d: 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z' }),
          _react2['default'].createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })
        )
      )] : null;

      var padding = date.weekday() ? _react2['default'].createElement('div', {
        style: {
          display: 'inline-block',
          width: colWidth * date.weekday() + '%',
          height: '9px'
        }
      }) : null;

      return _react2['default'].createElement(
        'div',
        {
          className: className,
          style: Object.assign({
            lineHeight: '30px',
            fontSize: '12px',
            width: '280px'
          }, style) },
        _react2['default'].createElement(
          'div',
          null,
          navigation,
          _react2['default'].createElement(
            'div',
            {
              style: {
                color: '#3e3e3e',
                textAlign: 'center',
                fontSize: '14px',
                lineHeight: '48px'
              } },
            date.format(titleFormat)
          )
        ),
        _react2['default'].createElement(
          'div',
          {
            style: {
              color: '#9e9e9e',
              fontWeight: 'bold',
              textAlign: 'center'
            } },
          weekdays.map(function (day, index) {
            return _react2['default'].createElement(
              'div',
              {
                key: index,
                style: {
                  display: 'inline-block',
                  width: colWidth + '%',
                  textAlign: 'center'
                } },
              day
            );
          })
        ),
        _react2['default'].createElement(
          'div',
          null,
          padding,
          days
        )
      );
    }
  }], [{
    key: 'displayName',
    value: 'Calendar',
    enumerable: true
  }, {
    key: 'contextTypes',
    value: {
      componentStyle: _react2['default'].PropTypes.object
    },
    enumerable: true
  }, {
    key: 'propTypes',
    value: {
      className: _react.PropTypes.string,
      locale: _react.PropTypes.string,
      month: _react.PropTypes.number,
      onChange: _react.PropTypes.func,
      onNavigate: _react.PropTypes.func,
      style: _react.PropTypes.object,
      titleFormat: _react.PropTypes.string,
      validDays: _react.PropTypes.array,
      value: _react.PropTypes.any,
      year: _react.PropTypes.number
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      className: '',
      locale: 'en',
      month: new Date().getMonth(),
      style: {},
      titleFormat: 'MMMM YYYY',
      validDays: null,
      value: null,
      year: new Date().getFullYear()
    },
    enumerable: true
  }]);

  return Calendar;
})(_react.Component);

exports['default'] = Calendar;
module.exports = exports['default'];